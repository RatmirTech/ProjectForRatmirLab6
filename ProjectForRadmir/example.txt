ProjectForRadmir.exe 13 190 3

Шаги выполнения программы для числа 190 и сдвига на 3 позиции:
Представление числа 190 в двоичном виде:

Число 190 в двоичном виде: 10111110
Выделение нечётных и чётных битов:

Маска для выделения нечётных битов: 0b01010101 (0x55)
Маска для выделения чётных битов: 0b10101010 (0xAA)
Выделение нечётных битов числа 190:

Нечётные биты: 0b01010101 & 10111110 = 00010100 (в двоичном виде, в десятичном: 20)
Циклический сдвиг нечётных битов на 3 позиции вправо:

Изначальные нечётные биты: 00010100
Первый сдвиг вправо: 00001010 (младший бит "цикла" перемещается на старший бит)
Второй сдвиг вправо: 00000101
Третий сдвиг вправо: 10000010
В результате после 3 сдвигов нечётные биты: 10000010 (в десятичном виде: 130)
Восстановление исходного числа, объединяя сдвинутые нечётные биты с чётными битами:

Изначальные чётные биты: 0b10101010 & 10111110 = 10101010 (в двоичном виде, в десятичном: 170)
Объединяем сдвинутые нечётные биты и чётные биты:
Нечётные биты после сдвига: 10000010
Чётные биты: 10101010
Объединяем: 10101010 & 10000010 = 00001010 (в десятичном: 10)

C:\Users\ratmir\Desktop\ProjectForRadmir\x64\Debug>ProjectForRadmir.exe 13 190 3
Текущая кодовая страница: 1251
функция 13

Двоичное представление результата:
0000000000000000000000000000000000000000000000000000000000011100
Десятичное представление результата: 28

-----------------------------------------------------------------------------
ProjectForRadmir.exe 14 1024

Анализ числа 1024
Представление числа 1024 в двоичном виде:

Число 1024 в двоичном виде: 10000000000
Определение позиции самого старшего бита:

Самый старший бит находится на 10-й позиции (если считать от 0).
Проверка функции firstOnePosition
Функция firstOnePosition ищет позицию самого старшего бита:

Пошаговый процесс выполнения:
Инициализация leftPtr:

leftPtr устанавливается в 0x8000000000000000 (самый старший бит для 64-битного числа).
Поиск первого бита:

Побитово AND между number (1024) и leftPtr:
leftPtr сначала 1000000000000000000000000000000000000000000000000000000000000000
После каждого сдвига вправо leftPtr становится: 0100000000000000000000000000000000000000000000000000000000000000, 0010000000000000000000000000000000000000000000000000000000000000, и так далее, пока не будет 0000000000000000000000000000000000000000000000000000000000010000.
Когда leftPtr равно 0000000000000000000000000000000000000000000000000000000000010000 (10-я позиция), bit1 становится не нулевым.
Вычисление позиции:

log2(leftPtr) для leftPtr = 0000000000000000000000000000000000000000000000000000000000010000 равно 10.

C:\Users\ratmir\Desktop\ProjectForRadmir\x64\Debug>ProjectForRadmir.exe 14 1024
Текущая кодовая страница: 1251
функция 14

First one position is: 10